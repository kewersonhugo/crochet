Declaration ::
  | type <TypeId>
  | relation <Signature>
  | define <Atom> :: <NsType>
  | scene <Atom> when <Predicate> do <Statement ...> end
  | when <Predicate> do <Statement ...> end
  | do <Statement ...> end
  | command <Signature> do <Statement ...> end
  | command <Signature> = foreign <Identifier>(<Identifier> ...)
  ;

Signature ::
  | <Type> <<Keyword> : <Type> ...>
  | <Type> <Atom>
  ;

Statement ::
  | set <SignatureUse>
  | unset <SignatureUse>
  | say <Expr>
  | yield
  | go to <Scene>
  | <Expr>
  ;